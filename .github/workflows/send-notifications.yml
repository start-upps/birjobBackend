name: Send Job Notifications

on:
  # Trigger manually from GitHub UI
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Run in dry mode (no actual notifications)'
        required: false
        default: 'false'
        type: choice
        options:
        - 'true'
        - 'false'
      limit:
        description: 'Number of jobs to process'
        required: false
        default: '100'
        type: string
  
  # Schedule to run every 30 minutes
  schedule:
    - cron: '*/30 * * * *'  # Every 30 minutes
  
  # Trigger on successful deployment
  repository_dispatch:
    types: [deployment-success]

jobs:
  send-notifications:
    runs-on: ubuntu-latest
    
    steps:
    - name: Send Job Match Notifications
      run: |
        echo "üöÄ Triggering job notifications..."
        
        # Set parameters
        DRY_RUN="${{ github.event.inputs.dry_run || 'false' }}"
        LIMIT="${{ github.event.inputs.limit || '100' }}"
        
        # Call your notification API
        RESPONSE=$(curl -s -X POST "${{ secrets.BACKEND_URL }}/api/v1/notifications/trigger" \
          -H "Content-Type: application/json" \
          -d '{
            "dry_run": '$DRY_RUN',
            "limit": '$LIMIT',
            "source_filter": null
          }')
        
        echo "Response: $RESPONSE"
        
        # Parse response and show results
        echo "‚úÖ Notification trigger completed"
        echo "Mode: $(echo $RESPONSE | jq -r '.data.status // "unknown"')"
        echo "Jobs processed: $(echo $RESPONSE | jq -r '.processed_jobs // 0')"
        echo "Users matched: $(echo $RESPONSE | jq -r '.matched_users // 0')"
        echo "Notifications sent: $(echo $RESPONSE | jq -r '.notifications_sent // 0')"
        
    - name: Send Test Notification (if manual trigger)
      if: github.event_name == 'workflow_dispatch'
      run: |
        echo "üì± Sending test notification..."
        
        # Get first available device
        DEVICES=$(curl -s "${{ secrets.BACKEND_URL }}/api/v1/notifications/devices")
        DEVICE_ID=$(echo $DEVICES | jq -r '.devices[0].device_id // empty')
        
        if [ -n "$DEVICE_ID" ]; then
          echo "Found device: $DEVICE_ID"
          
          # Send test notification
          curl -s -X POST "${{ secrets.BACKEND_URL }}/api/v1/notifications/test-simple-push/$DEVICE_ID"
          echo "‚úÖ Test notification sent to $DEVICE_ID"
        else
          echo "‚ö†Ô∏è No devices found for testing"
        fi

    - name: Notification Summary
      run: |
        echo "üéâ GitHub Actions notification workflow completed!"
        echo "Timestamp: $(date)"
        echo "Trigger: ${{ github.event_name }}"