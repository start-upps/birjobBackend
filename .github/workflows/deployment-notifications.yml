name: Deployment Notifications

on:
  # Trigger when code is pushed to main
  push:
    branches: [ main ]
    paths:
      - 'app/**'
      - 'requirements.txt'
      - 'main.py'
      - 'run.py'
  
  # Trigger on successful deployment (if using Render webhooks)
  repository_dispatch:
    types: [deployment-complete]

jobs:
  notify-deployment:
    runs-on: ubuntu-latest
    
    steps:
    - name: Wait for Deployment
      run: |
        echo "‚è≥ Waiting for deployment to complete..."
        sleep 30  # Wait 30 seconds for Render deployment
        
    - name: Verify Backend Health
      run: |
        echo "üè• Checking backend health..."
        
        MAX_RETRIES=10
        RETRY_COUNT=0
        
        while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
          HEALTH_RESPONSE=$(curl -s "${{ secrets.BACKEND_URL }}/health" || echo '{"status":"error"}')
          STATUS=$(echo $HEALTH_RESPONSE | jq -r '.status // "error"')
          
          echo "Attempt $((RETRY_COUNT + 1)): Backend status = $STATUS"
          
          if [ "$STATUS" = "ok" ] || [ "$STATUS" = "healthy" ]; then
            echo "‚úÖ Backend is healthy!"
            break
          fi
          
          RETRY_COUNT=$((RETRY_COUNT + 1))
          sleep 10
        done
        
        if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
          echo "‚ùå Backend health check failed after $MAX_RETRIES attempts"
          exit 1
        fi
        
    - name: Send System Notification
      run: |
        echo "üì¢ Sending deployment notification to users..."
        
        # Get active devices
        DEVICES=$(curl -s "${{ secrets.BACKEND_URL }}/api/v1/notifications/devices" | jq -r '.devices[].device_id')
        
        # Send system notification to each device
        for DEVICE_ID in $DEVICES; do
          echo "Sending to device: $DEVICE_ID"
          
          RESPONSE=$(curl -s -X POST "${{ secrets.BACKEND_URL }}/api/v1/notifications/test-simple-push/$DEVICE_ID")
          SUCCESS=$(echo $RESPONSE | jq -r '.success // false')
          
          if [ "$SUCCESS" = "true" ]; then
            echo "‚úÖ Notification sent to $DEVICE_ID"
          else
            echo "‚ùå Failed to send to $DEVICE_ID"
          fi
        done
        
    - name: Trigger Fresh Job Check
      run: |
        echo "üîÑ Triggering fresh job notification check..."
        
        # Trigger immediate job notification processing
        curl -s -X POST "${{ secrets.BACKEND_URL }}/api/v1/notifications/trigger" \
          -H "Content-Type: application/json" \
          -d '{
            "dry_run": false,
            "limit": 200,
            "source_filter": null
          }'
        
        echo "‚úÖ Fresh job check triggered"
        
    - name: Send GitHub Notification
      run: |
        echo "üéâ Deployment notification workflow completed!"
        echo "Backend URL: ${{ secrets.BACKEND_URL }}"
        echo "Commit: ${{ github.sha }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Timestamp: $(date)"